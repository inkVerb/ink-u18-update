#!/bin/sh
#inkVerbKnight! verb.ink
#set -e

# This adds a hosted domain to an existing Verber's account on this Inker
## The proper way to move a domain from one Verber host to another is to remove it with verberdomainkill, then add it again with the correct Verber TLD

# How to use:
## ./verberdomain [ Verber type - "verb" or "dmod" ] [ vname OR mod-domain.tld ] [ domain.tld ] [ Verber tld - if not "ink" ]

# Eg:
## ./verberdomain verb name poetryiscode.com
## ./verberdomain verb name poetryiscode.com kiwi
## ./verberdomain dmod poetryiscode.com inkisaverb.com blue


VTYPE="$1"
VNAME="$2"
VDOMAIN="$3"
VTLD="$4"
# Inker nsURI
. /opt/verb/conf/siteurilist
nsURI="${hostURI}"

# Check if Verber account exists
if [ ! -d "/opt/ink/verbers/v.${VTYPE}.${VNAME}" ]; then
  echo "That Verber is not setup. Doing nothing."
  exit 0; fi

# Default tld value
if [ -z "$4" ]; then
  VTLD="ink"; fi

# Check if the necessary Bind rDNS file exists
if [ ! -f "/var/cache/bind/zones-inker/nv.${VTYPE}.${VNAME}.${VTLD}" ]; then
  echo "Something's wrong. The Bind rDNS file for this Verber should exist, but it does not. Doing nothing."
  exit 6; fi

# Check whether the multiple hosting option is allowed, default if not
if [ "${VTLD}" != "ink" ]; then
  . /opt/ink/verbers/v.${VTYPE}.${VNAME}/nfo.status
  if [ "${VSTATUS}" = "solo" ]; then
  echo "Verber does not allow hosting on multiple servers, using \"ink\" instead of \"${VTLD}\"..."
  VTLD="ink"
  elif [ "${VSTATUS}" = "multi" ] && [ -f "/opt/ink/verbers/v.${VTYPE}.${VNAME}/tld.${VTLD}" ]; then
  echo "Verber allows hosting on multiple servers, using \"${VTLD}\"..."
  else "Something's wrong with the tld \"${VTLD}\", using \"ink\" instead..."
  VTLD="ink"
fi; fi

# Include the config
. /opt/ink/verbers/v.${VTYPE}.${VNAME}/tld.${VTLD}

# Set the status
echo "verberTLD=\"${VTLD}\"
domIP4=\"${VERBERIPV4}\"
domIP6=\"${VERBERIPV6}\"
domEXPIPV6=\"${VERBEREXPIPV6}\"
domARPAIP4=\"${VERBERARPAIP4}\"
domARPAIP6=\"${VERBERARPAIP6}\"
" > /opt/ink/verbers/v.${VTYPE}.${VNAME}/domain.${VDOMAIN}

# Inker's Verber config
. /opt/verb/conf/sitenameip

# DNS zone file
## Hosting Verber's config
echo "\$TTL    86400
${VDOMAIN}.		IN  SOA		${hostURI}. root.${nameURI}. (
0000000001		; Serial No
10800			; Refresh
3600			; Retry
604800			; Expire
1800 )			; Minimum TTL

\$ORIGIN ${VDOMAIN}.
; Nameserver Defaults
@		IN  NS		${hostURI}.@		IN  NS		${nsURI}.
@		IN  NS		${SITEINKERDNS}.

; Original Defaults
@		IN  A		${VERBERIPV4}
@		IN  AAAA	${VERBERIPV6}
*.${VDOMAIN}.		IN  A		${VERBERIPV4}
*.${VDOMAIN}.		IN  AAAA	${VERBERIPV6}" >> /var/cache/bind/zones-inker/db.${VDOMAIN}
chown bind:bind /var/cache/bind/zones-inker/db.${VDOMAIN}
chmod 644 /var/cache/bind/zones-inker/db.${VDOMAIN}

# rDNS zone file
## DEV: In theory, this should not be necessary since the rDNS should be updadating automatically from the master Bind Verber
## DEV: Delete this entire rDNS zone file addition if the Bind slave file on this Inker is updating properly
#echo "${VERBERARPAIP6}		IN  PTR  ${VDOMAIN}." >> /var/cache/bind/zones-inker/nv.IP6.${VTYPE}.${VNAME}.${VTLD}
#echo "${VERBERARPAIP4}		IN  PTR  ${VDOMAIN}." >> /var/cache/bind/zones-inker/nv.IP4.${VTYPE}.${VNAME}.${VTLD}
